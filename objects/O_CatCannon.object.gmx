<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_CatCannon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Enemy_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CREATE

// Cat Info
image_speed = 0; // Default should be standing pose
hp = 15;
left = -1;
right = 1;
facing = left;
originalX = x;
minDistance=10;
maxDistance=400;

// Charging code
charge_time = 0 + irandom(50);
charge_time_max = 50;
phase = 2;
attack = 1;
charge = 2;

// Flashing code for when hit by bullet
is_flashed = false;
flash_timer = 0;
flash_Max = 2;

// Drop to ground
while (!place_meeting(x, y + 1, O_Ground)) {
    y += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// FLASHING (hit by bullet)
// Flashing code for when hit
if(is_flashed=true)
{
    flash_timer+=1;
    image_blend=c_red;

    if(flash_timer==flash_Max)
    {
        is_flashed=false;
        image_blend=c_white;
        flash_timer=0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEATH
if (hp == 0) {
    // Play death sound
    audio_play_sound(M_Explode, 0, false);

    // Make a death explosion
    instance_create(x, y, O_Explosion);
    instance_destroy(); // Kill the cat
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UPDATE &amp; ATTACK

// Figure out which direction to face
xDistance = x - O_Player.x;

    if(xDistance + sprite_width &gt; 0){ // If player is inside enemy, don't swap
        facing = left;
        image_xscale = 1; // Normal image
        x = originalX;
    }
    if(xDistance + sprite_width &lt; 0){ // If player is inside enemy, don't swap
        facing = right;
        image_xscale = -1; // Flip Image
        x = originalX - sprite_width; // Deal with image flip offset
   
}
// Code to determine when and how to attack
if (phase == charge) // While charging
{
    if(abs(xDistance)&gt;minDistance and abs(xDistance)&lt;maxDistance)
    { 
    charge_time += 1;
    if (charge_time == charge_time_max) // If it's done charging, attack
    {
        charge_time = 0;
        phase = attack;
    }
    }
    else
    {
        charge_time=0;
    }
}

if (phase == attack) // Attack timing
{
    // Use the animation to determine attacking
    image_speed = .5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHOOT
// Shoot a bomb and shake the screen
// Different shooting place with facing location
if(image_index==3)
{
    if (facing == left) {
    var bomb = instance_create(x, y + sprite_height / 3, O_CannonBomb);
    } else if (facing == right) {
    var bomb = instance_create(x, y + sprite_height / 3, O_CannonBomb);
    }
    bomb.xSpeed *= facing; // Shoot the bomb in the direction you are facing
    instance_create(x, y, O_Shake_Small);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="O_Bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HURT
// When hit by bullet -1 health
hp-=1;

// Flash when hit
is_flashed=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// SET TO CHARGE
    
    // Set the cat to charge again 
    phase = charge;
    image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
