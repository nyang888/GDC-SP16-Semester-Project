<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_CatBoss_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Enemy_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INIT VARIABLES
image_speed = 0;
hp = 50;
charge_time = 0 + irandom(10);
charge_time_max = 50;
transition_time = 0;
transition_time_max = 5;
attack_time = 0;
attack_time_max = 20;
phase = 2;
attack = 1;
charge = 2;
transition = 3;

left = -1;
right = 1;
facing = left;

is_flashed = false;
flash_timer = 0;
flash_Max = 2;

// Drop the enemy to ground
while (!place_meeting(x, y + 1, O_Ground)) {
    y += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ATTACK CONTROLLER

// While charging, play idle
if (phase == charge) {
    image_speed = .25;
    sprite_index = S_CatBoss_Idle;
    charge_time += 1;
    
    // Upon completing charge, start transition
    if (charge_time == charge_time_max) {
        charge_time = 0;
        phase = transition;
    }
}

// While transitioning, play transition gif
if (phase == transition) {
    image_speed = .25;
    sprite_index = S_CatBoss_Transition;
    transition_time += 1;
    
    // Upon completing transition, attack
    if (transition_time == transition_time_max) {
        transition_time = 0;
        phase = attack;
    }
}

// For attack, create 1 beam, remainder will be made in O_Beam
if (phase == attack) {
    image_speed = .25;
    sprite_index = S_CatBoss_Blasting
    
    attack_time += 1;
        var Beam;
        Beam = instance_create(x, y + sprite_height * 2 / 5, O_CatBoss_Beam);
        
        instance_create(x, y, O_Shake_Small);
        
    // When completing the attack, return to original animations
   if (attack_time == attack_time_max) {
        attack_time = 0;
        phase = charge;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
