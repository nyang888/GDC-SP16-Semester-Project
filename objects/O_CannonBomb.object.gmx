<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_Cannon_Bomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CREATE 
instance_create(x, y, O_Shake_Small); // Shake the screen when shooting
image_speed = 0; // Default bomb sprite
cannonGrav = 1.5; // Fixed gravity
audio_play_sound(M_Shoot, 10, false); // Play shooting sound
explodeSoundPlayed = false;

// Calculate distance from player
distanceY = y - O_Player.y - 48;
distanceX = abs(x - (O_Player.x + 16));

/*********** Fixed amount of time *****************/
timeCannon = 20; // Fixed amount of time

// Find speeds in x and y
xSpeed = distanceX/timeCannon;
ySpeed = -(distanceY/timeCannon)-.5*cannonGrav*timeCannon;
/**************************************************/

/*********** Fixed xSpeed *************************

xSpeed = 10; // Fixed xSpeed
timeCannon = distanceX / xSpeed; // Calculate the time to reach x position
ySpeed = -(distanceY / timeCannon) - .5 * cannonGrav * timeCannon; // Calculate the initial velocity in y
/**************************************************/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// PATH 

//vertical
if(place_meeting(x,y+ySpeed,O_Ground))
{
       while(!place_meeting(x,y+sign(ySpeed),O_Ground))
        {
            y += sign(ySpeed);
        }
}
//horizontal
 if(place_meeting(x + xSpeed, y,O_Ground))
    {
        while(!place_meeting(x+sign(xSpeed),y,O_Ground))
        {
            x += sign(xSpeed);
            
        }
       
    }
    
    // We update position by speed
x+=xSpeed;
y+=ySpeed;

// Update the y speed to account for gravity
ySpeed += cannonGrav;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="O_Ground">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// EXPLODE

// Upon hitting ground, stop
xSpeed = 0;
ySpeed = 0;

// Play the animation to destroy bomb 
image_speed = 1;

// Only play sound if it hasn't already played
if(explodeSoundPlayed == false){ 
    explodeSoundPlayed = true;
    audio_play_sound(M_Explode,0,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// KILL

// Destroy bomb at the end of animation
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
